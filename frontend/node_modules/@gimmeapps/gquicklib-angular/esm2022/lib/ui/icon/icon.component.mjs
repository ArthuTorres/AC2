import { Component, Input } from '@angular/core';
import { faAdd, faBars, faCaretLeft, faCaretRight, faCircleUser, faClose, faHome, faListCheck, faPencil, faRightFromBracket, faSearch, faTag, faTrash, faWrench, faXmark } from '@fortawesome/free-solid-svg-icons';
import * as i0 from "@angular/core";
import * as i1 from "@fortawesome/angular-fontawesome";
const iconMap = {
    'home': faHome,
    'menu': faBars,
    'quotes': faTag,
    'registrations': faListCheck,
    'settings': faWrench,
    'user-photo': faCircleUser,
    'logout': faRightFromBracket,
    'add': faAdd,
    'edit': faPencil,
    'delete': faTrash,
    'search': faSearch,
    'previous': faCaretLeft,
    'next': faCaretRight,
    "close": faClose
};
export class IconComponent {
    getIcon() {
        return this.iconName ? iconMap[this.iconName] : faXmark;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.0", ngImport: i0, type: IconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.0", type: IconComponent, selector: "quick-icon", inputs: { iconName: "iconName" }, ngImport: i0, template: '<fa-icon [icon]="getIcon()"></fa-icon>', isInline: true, dependencies: [{ kind: "component", type: i1.FaIconComponent, selector: "fa-icon", inputs: ["icon", "title", "animation", "spin", "pulse", "mask", "styles", "flip", "size", "pull", "border", "inverse", "symbol", "rotate", "fixedWidth", "classes", "transform", "a11yRole"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.0", ngImport: i0, type: IconComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'quick-icon',
                    template: '<fa-icon [icon]="getIcon()"></fa-icon>'
                }]
        }], propDecorators: { iconName: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9ncXVpY2tsaWItYW5ndWxhci9zcmMvbGliL3VpL2ljb24vaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7O0FBRXBOLE1BQU0sT0FBTyxHQUFzQztJQUNqRCxNQUFNLEVBQUUsTUFBTTtJQUNkLE1BQU0sRUFBRSxNQUFNO0lBQ2QsUUFBUSxFQUFFLEtBQUs7SUFDZixlQUFlLEVBQUUsV0FBVztJQUM1QixVQUFVLEVBQUUsUUFBUTtJQUNwQixZQUFZLEVBQUUsWUFBWTtJQUMxQixRQUFRLEVBQUUsa0JBQWtCO0lBQzVCLEtBQUssRUFBRSxLQUFLO0lBQ1osTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLE9BQU87SUFDakIsUUFBUSxFQUFFLFFBQVE7SUFDbEIsVUFBVSxFQUFFLFdBQVc7SUFDdkIsTUFBTSxFQUFFLFlBQVk7SUFDcEIsT0FBTyxFQUFFLE9BQU87Q0FDakIsQ0FBQTtBQU1ELE1BQU0sT0FBTyxhQUFhO0lBR3hCLE9BQU87UUFDTCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUMxRCxDQUFDOzhHQUxVLGFBQWE7a0dBQWIsYUFBYSxvRkFGZCx3Q0FBd0M7OzJGQUV2QyxhQUFhO2tCQUp6QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxZQUFZO29CQUN0QixRQUFRLEVBQUUsd0NBQXdDO2lCQUNuRDs4QkFFVSxRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWNvbkRlZmluaXRpb24gfSBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtY29tbW9uLXR5cGVzJztcbmltcG9ydCB7IGZhQWRkLCBmYUJhcnMsIGZhQ2FyZXRMZWZ0LCBmYUNhcmV0UmlnaHQsIGZhQ2lyY2xlVXNlciwgZmFDbG9zZSwgZmFIb21lLCBmYUxpc3RDaGVjaywgZmFQZW5jaWwsIGZhUmlnaHRGcm9tQnJhY2tldCwgZmFTZWFyY2gsIGZhVGFnLCBmYVRyYXNoLCBmYVdyZW5jaCwgZmFYbWFyayB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mcmVlLXNvbGlkLXN2Zy1pY29ucyc7XG5cbmNvbnN0IGljb25NYXA6IHsgW2tleTogc3RyaW5nXTogSWNvbkRlZmluaXRpb24gfSA9IHtcbiAgJ2hvbWUnOiBmYUhvbWUsXG4gICdtZW51JzogZmFCYXJzLFxuICAncXVvdGVzJzogZmFUYWcsXG4gICdyZWdpc3RyYXRpb25zJzogZmFMaXN0Q2hlY2ssXG4gICdzZXR0aW5ncyc6IGZhV3JlbmNoLFxuICAndXNlci1waG90byc6IGZhQ2lyY2xlVXNlcixcbiAgJ2xvZ291dCc6IGZhUmlnaHRGcm9tQnJhY2tldCxcbiAgJ2FkZCc6IGZhQWRkLFxuICAnZWRpdCc6IGZhUGVuY2lsLFxuICAnZGVsZXRlJzogZmFUcmFzaCxcbiAgJ3NlYXJjaCc6IGZhU2VhcmNoLFxuICAncHJldmlvdXMnOiBmYUNhcmV0TGVmdCxcbiAgJ25leHQnOiBmYUNhcmV0UmlnaHQsXG4gIFwiY2xvc2VcIjogZmFDbG9zZVxufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdxdWljay1pY29uJyxcbiAgdGVtcGxhdGU6ICc8ZmEtaWNvbiBbaWNvbl09XCJnZXRJY29uKClcIj48L2ZhLWljb24+J1xufSlcbmV4cG9ydCBjbGFzcyBJY29uQ29tcG9uZW50IHtcbiAgQElucHV0KCkgaWNvbk5hbWU/OiBzdHJpbmc7XG5cbiAgZ2V0SWNvbigpIHtcbiAgICByZXR1cm4gdGhpcy5pY29uTmFtZSA/IGljb25NYXBbdGhpcy5pY29uTmFtZV0gOiBmYVhtYXJrO1xuICB9XG59XG4iXX0=